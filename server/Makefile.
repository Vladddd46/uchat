# compiler name
CC 		=	clang

# binary name
NAME	=	uchat_server

CHAT_DIR = uchat
# library list
LIB_DIR	=	../libs
# add lib folder in ../libs/ (the <lib_name>.a and the ../lib/<lib_folder_name> must be the same)
LIB_LIST	=	libmx cjson
# make path to library
LIB_DIRS = $(foreach lib, $(LIB_LIST), $(LIB_DIR)/$(lib))
# make path to ../libs/<lib_name>.a
LIBS = ../libs/cjson/cjson.a ../libs/libmx/libmx.a

SRC_DIR = 	src/
OBJ_DIR	= 	obj/
INC = inc/server.h ../libs/libmx/inc/libmx.h ../libs/cjson/inc/cJSON.h

# add dir new <dir_name> in src/<dir_name>, if you`ve created newone
SRC_DIRS	=	db_functions help_functions logic server

# add your new dir_name and file included it (without any extansions)
db_functions = database_init mx_database_communication opening_db

help_functions = error json_packet_former

logic = handle_client login_determiner login socket_list

server = deamon listening_socket_init server

# making filenames for compiling
FILES	=	$(foreach dir, $(SRC_DIRS), $($(dir):%=$(dir)/%))

# make src file
SRC		=	$(FILES:%=$(SRC_DIR)%.c)
# make obj file
OBJ		=	$(FILES:%=$(OBJ_DIR)%.o)

# general compiler flags
CFLG_G	=	-std=c11 $(addprefix -W, all error pedantic extra)

# specific compiler flags (add some, if you need it)
CFGG_S	=	-lsqlite3 -lpthread

COMPILE = $(CC) $(CFLG_G) $(CFLG_S)

all: $(LIB_LIST) $(NAME)

$(LIB_LIST):
	@make -sf Makefile -C $(LIB_DIR)/$@

$(NAME): $(OBJ_DIR) $(OBJ)
	@$(COMPILE) $(OBJ) -lmx -o $@ -I $(LIBS) $(INC)
	@printf "\r\33[2K$@ \033[32;1mcreated\033[0m\n"

$(OBJ_DIR)%.o: $(SRC_DIR)%.c
	@$(CC) $(CFLG_G) -o $@ -c $<  -I $(LIBS) $(INC)
	@printf "\r\33[2K$(NAME) \033[33;1mcompile \033[0m$(<:$(SRC_DIR)/%.c=%) "

$(OBJ_DIR):
	@mkdir -p $(foreach dir, $(SRC_DIRS), $@/$(dir))
print:
	@printf "$()"
#	clang $(CFLG) src/*/*.c -I inc/ -I ../libs/cjson/inc  -I ../libs/libmx/inc/ -lpthread ../libs/libmx/libmx.a ../libs/cjson/cJSON.a -o server
